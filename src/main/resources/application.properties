spring.application.name=on-stage

# Server Port
server.port=${SERVER_PORT}

# MySQL
#jdbc:mysql://localhost:3306/?????useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC
spring.datasource.url=${DATASOURCE_URL}
spring.datasource.username=${DATASOURCE_USERNAME}
spring.datasource.password=${DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# S3
cloud.aws.credentials.access-key= ${S3_ONSTAGE_ACCESS_KEY}
cloud.aws.credentials.secret-key= ${S3_ONSTAGE_SECRET_KEY}
cloud.aws.s3.bucket= ${S3_ONSTAGE_BUCKET}
cloud.aws.region.static= ap-northeast-2
cloud.aws.stack.auto: false

# openAI chatGPT key
openai.model=gpt-4o-mini
openai.secret-key= ${ON-STAGE-CHATGPT}
#@Value("${gpt_secret_key}")


# SQL
#Spring Boot 3.3 ????? MySQL8Dialect? deprecated ?????. MySQLDialect? ?????:
spring.jpa.show-sql=true
#hibernate.dialect ??? ?????. MySQL? ?? ??? ?????? ???? ?????.
#spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# Hibernate
spring.jpa.database=mysql
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.generate-ddl=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

# JWT
#base64 32byte
jwt.secret= ${JWT_SECRET_KEY}
jwt.token.refresh-expires= 7200000
jwt.token.access-expires= 1800000

### OAuth ###

# Google OAuth
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

# Naver OAuth
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_SECRET}
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response